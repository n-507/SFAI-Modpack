# File Specification: https://gist.github.com/Shadows-of-Fire/88ac714a758636c57a52e32ace5474c1

# Apotheosis Enchantment Information

# This file contains configurable data for each enchantment.
# The names of each category correspond to the registry names of every loaded enchantment.


"minecraft:protection" {
    # The max level of this enchantment - originally 4.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: COMMON
    S:Rarity=COMMON
}


"minecraft:fire_protection" {
    # The max level of this enchantment - originally 4.
    # Default: 9; Range: [1 ~ 127]
    I:"Max Level"=9

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"minecraft:feather_falling" {
    # The max level of this enchantment - originally 4.
    # Default: 11; Range: [1 ~ 127]
    I:"Max Level"=11

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"minecraft:blast_protection" {
    # The max level of this enchantment - originally 4.
    # Default: 9; Range: [1 ~ 127]
    I:"Max Level"=9

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:projectile_protection" {
    # The max level of this enchantment - originally 4.
    # Default: 11; Range: [1 ~ 127]
    I:"Max Level"=11

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"minecraft:respiration" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:aqua_affinity" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:thorns" {
    # The max level of this enchantment - originally 3.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"minecraft:depth_strider" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:frost_walker" {
    # The max level of this enchantment - originally 2.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:binding_curse" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"minecraft:soul_speed" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: false
    B:Discoverable=false

    # If enchanted books of this enchantment are available via loot sources.
    # Default: false
    B:Lootable=false

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"minecraft:swift_sneak" {
    # The max level of this enchantment - originally 3.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: false
    B:Discoverable=false

    # If enchanted books of this enchantment are available via loot sources.
    # Default: false
    B:Lootable=false

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"minecraft:sharpness" {
    # The max level of this enchantment - originally 5.
    # Default: 9; Range: [1 ~ 127]
    I:"Max Level"=9

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: COMMON
    S:Rarity=COMMON
}


"minecraft:smite" {
    # The max level of this enchantment - originally 5.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Level"=10

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"minecraft:bane_of_arthropods" {
    # The max level of this enchantment - originally 5.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Level"=10

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"minecraft:knockback" {
    # The max level of this enchantment - originally 2.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"minecraft:fire_aspect" {
    # The max level of this enchantment - originally 2.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:looting" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:sweeping" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:efficiency" {
    # The max level of this enchantment - originally 5.
    # Default: 9; Range: [1 ~ 127]
    I:"Max Level"=9

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: COMMON
    S:Rarity=COMMON
}


"minecraft:silk_touch" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"minecraft:unbreaking" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"minecraft:fortune" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:power" {
    # The max level of this enchantment - originally 5.
    # Default: 9; Range: [1 ~ 127]
    I:"Max Level"=9

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: COMMON
    S:Rarity=COMMON
}


"minecraft:punch" {
    # The max level of this enchantment - originally 2.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:flame" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:infinity" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"minecraft:luck_of_the_sea" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:lure" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:loyalty" {
    # The max level of this enchantment - originally 3.
    # Default: 9; Range: [1 ~ 127]
    I:"Max Level"=9

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"minecraft:impaling" {
    # The max level of this enchantment - originally 5.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Level"=10

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:riptide" {
    # The max level of this enchantment - originally 3.
    # Default: 9; Range: [1 ~ 127]
    I:"Max Level"=9

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:channeling" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"minecraft:multishot" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:quick_charge" {
    # The max level of this enchantment - originally 3.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"minecraft:piercing" {
    # The max level of this enchantment - originally 4.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: COMMON
    S:Rarity=COMMON
}


"minecraft:mending" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"minecraft:vanishing_curse" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"tombstone:soulbound" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"tombstone:magic_siphon" {
    # The max level of this enchantment - originally 10.
    # Default: 13; Range: [1 ~ 127]
    I:"Max Level"=13

    # The max level of this enchantment available from loot sources.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Loot Level"=10

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"tombstone:plague_bringer" {
    # The max level of this enchantment - originally 10.
    # Default: 13; Range: [1 ~ 127]
    I:"Max Level"=13

    # The max level of this enchantment available from loot sources.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Loot Level"=10

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"tombstone:curse_of_bones" {
    # The max level of this enchantment - originally 10.
    # Default: 13; Range: [1 ~ 127]
    I:"Max Level"=13

    # The max level of this enchantment available from loot sources.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Loot Level"=10

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"tombstone:blessing" {
    # The max level of this enchantment - originally 10.
    # Default: 13; Range: [1 ~ 127]
    I:"Max Level"=13

    # The max level of this enchantment available from loot sources.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Loot Level"=10

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"tombstone:frostbite" {
    # The max level of this enchantment - originally 10.
    # Default: 13; Range: [1 ~ 127]
    I:"Max Level"=13

    # The max level of this enchantment available from loot sources.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Loot Level"=10

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"tombstone:spectral_bite" {
    # The max level of this enchantment - originally 10.
    # Default: 13; Range: [1 ~ 127]
    I:"Max Level"=13

    # The max level of this enchantment available from loot sources.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Loot Level"=10

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"passablefoliage:leaf_walker" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: false
    B:Discoverable=false

    # If enchanted books of this enchantment are available via loot sources.
    # Default: false
    B:Lootable=false

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: COMMON
    S:Rarity=COMMON
}


"epicsamurai:demon_slayer" {
    I:"Max Level"=1
    I:"Max Loot Level"=1
    S:"Max Power Function"=
    S:"Min Power Function"=
    B:Treasure=false
    B:Discoverable=true
    B:Lootable=true
    B:Tradeable=true
    S:Rarity=UNCOMMON
}


"cofh_core:holding" {
    # The max level of this enchantment - originally 4.
    # Default: 12; Range: [1 ~ 127]
    I:"Max Level"=12

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: COMMON
    S:Rarity=COMMON
}


"apotheosis:miners_fervor" {
    # The max level of this enchantment - originally 5.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"apotheosis:stable_footing" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"apotheosis:scavenger" {
    # The max level of this enchantment - originally 3.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Level"=3

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"apotheosis:life_mending" {
    # The max level of this enchantment - originally 3.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Level"=3

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"apotheosis:icy_thorns" {
    # The max level of this enchantment - originally 3.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"apotheosis:tempting" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"apotheosis:shield_bash" {
    # The max level of this enchantment - originally 4.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"apotheosis:reflective" {
    # The max level of this enchantment - originally 5.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"apotheosis:berserkers_fury" {
    # The max level of this enchantment - originally 3.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Level"=3

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"apotheosis:knowledge" {
    # The max level of this enchantment - originally 3.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Level"=3

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"apotheosis:splitting" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"apotheosis:natures_blessing" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"apotheosis:rebounding" {
    # The max level of this enchantment - originally 3.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"apotheosis:bane_of_illagers" {
    # The max level of this enchantment - originally 5.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Level"=10

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"apotheosis:obliteration" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"apotheosis:crescendo" {
    # The max level of this enchantment - originally 5.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"apotheosis:infusion" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: false
    B:Discoverable=false

    # If enchanted books of this enchantment are available via loot sources.
    # Default: false
    B:Lootable=false

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"apotheosis:endless_quiver" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"apotheosis:chromatic" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"apotheosis:exploitation" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"apotheosis:growth_serum" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"apotheosis:earths_boon" {
    # The max level of this enchantment - originally 3.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"apotheosis:chainsaw" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"apotheosis:spearfishing" {
    # The max level of this enchantment - originally 5.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"apotheosis:capturing" {
    # The max level of this enchantment - originally 5.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"farmersdelight:backstabbing" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"undergarden:ricochet" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"undergarden:longevity" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: COMMON
    S:Rarity=COMMON
}


"undergarden:self_sling" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"create:potato_recovery" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"create:capacity" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: COMMON
    S:Rarity=COMMON
}


"ars_nouveau:mana_regen" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"ars_nouveau:mana_boost" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"ars_nouveau:reactive" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"supplementaries:stasis" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"create_sa:gravity_gun" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"create_sa:digging" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"create_sa:impact" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"create_sa:hellfire" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: COMMON
    S:Rarity=COMMON
}


"ars_elemental:mirror_shield" {
    # The max level of this enchantment - originally 4.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: false
    B:Discoverable=false

    # If enchanted books of this enchantment are available via loot sources.
    # Default: false
    B:Lootable=false

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"ars_elemental:soulbound" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"forbidden_arcanus:permafrost" {
    I:"Max Level"=1
    I:"Max Loot Level"=1
    S:"Max Power Function"=
    S:"Min Power Function"=
    B:Treasure=false
    B:Discoverable=true
    B:Lootable=true
    B:Tradeable=true
    S:Rarity=UNCOMMON
}


"enigmaticlegacy:sharpshooter" {
    # The max level of this enchantment - originally 5.
    # Default: 9; Range: [1 ~ 127]
    I:"Max Level"=9

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"enigmaticlegacy:ceaseless" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"enigmaticlegacy:nemesis" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"enigmaticlegacy:torrent" {
    # The max level of this enchantment - originally 5.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Level"=10

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"enigmaticlegacy:wrath" {
    # The max level of this enchantment - originally 5.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Level"=10

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"enigmaticlegacy:slayer" {
    # The max level of this enchantment - originally 5.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Level"=10

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: COMMON
    S:Rarity=COMMON
}


"enigmaticlegacy:eternal_binding" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: false
    B:Discoverable=false

    # If enchanted books of this enchantment are available via loot sources.
    # Default: false
    B:Lootable=false

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"enigmaticlegacy:sorrow" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"vampirism:crossbowfrugality" {
    I:"Max Level"=10
    I:"Max Loot Level"=2
    S:"Max Power Function"=
    S:"Min Power Function"=
    B:Treasure=false
    B:Discoverable=true
    B:Lootable=true
    B:Tradeable=true
    S:Rarity=VERY_RARE
}


"vampirism:vampireslayer" {
    I:"Max Level"=9
    I:"Max Loot Level"=5
    S:"Max Power Function"=
    S:"Min Power Function"=
    B:Treasure=false
    B:Discoverable=true
    B:Lootable=true
    B:Tradeable=true
    S:Rarity=UNCOMMON
}


"alexsmobs:straddle_jump" {
    I:"Max Level"=11
    I:"Max Loot Level"=3
    S:"Max Power Function"=
    S:"Min Power Function"=
    B:Treasure=false
    B:Discoverable=true
    B:Lootable=true
    B:Tradeable=true
    S:Rarity=COMMON
}


"alexsmobs:lavawax" {
    I:"Max Level"=1
    I:"Max Loot Level"=1
    S:"Max Power Function"=
    S:"Min Power Function"=
    B:Treasure=false
    B:Discoverable=true
    B:Lootable=true
    B:Tradeable=true
    S:Rarity=UNCOMMON
}


"alexsmobs:serpentfriend" {
    I:"Max Level"=1
    I:"Max Loot Level"=1
    S:"Max Power Function"=
    S:"Min Power Function"=
    B:Treasure=false
    B:Discoverable=true
    B:Lootable=true
    B:Tradeable=true
    S:Rarity=RARE
}


"alexsmobs:board_return" {
    I:"Max Level"=1
    I:"Max Loot Level"=1
    S:"Max Power Function"=
    S:"Min Power Function"=
    B:Treasure=false
    B:Discoverable=true
    B:Lootable=true
    B:Tradeable=true
    S:Rarity=UNCOMMON
}


"copperoverhaul:stormbreaker" {
    I:"Max Level"=6
    I:"Max Loot Level"=2
    S:"Max Power Function"=
    S:"Min Power Function"=
    B:Treasure=false
    B:Discoverable=true
    B:Lootable=true
    B:Tradeable=true
    S:Rarity=RARE
}


"copperoverhaul:sparkling" {
    I:"Max Level"=7
    I:"Max Loot Level"=3
    S:"Max Power Function"=
    S:"Min Power Function"=
    B:Treasure=false
    B:Discoverable=true
    B:Lootable=true
    B:Tradeable=true
    S:Rarity=UNCOMMON
}


"the_bumblezone:comb_cutter" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"the_bumblezone:potent_poison" {
    # The max level of this enchantment - originally 3.
    # Default: 11; Range: [1 ~ 127]
    I:"Max Level"=11

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"the_bumblezone:neurotoxins" {
    # The max level of this enchantment - originally 2.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"windswept:slipping_curse" {
    I:"Max Level"=1
    I:"Max Loot Level"=1
    S:"Max Power Function"=
    S:"Min Power Function"=
    B:Treasure=true
    B:Discoverable=true
    B:Lootable=true
    B:Tradeable=true
    S:Rarity=VERY_RARE
}


"sculked:echoed_bane" {
    I:"Max Level"=9
    I:"Max Loot Level"=5
    S:"Max Power Function"=
    S:"Min Power Function"=
    B:Treasure=false
    B:Discoverable=true
    B:Lootable=true
    B:Tradeable=false
    S:Rarity=RARE
}


"deeperdarker:catalysis" {
    I:"Max Level"=5
    I:"Max Loot Level"=3
    S:"Max Power Function"=
    S:"Min Power Function"=
    B:Treasure=true
    B:Discoverable=true
    B:Lootable=true
    B:Tradeable=true
    S:Rarity=VERY_RARE
}


"deeperdarker:sculk_smite" {
    I:"Max Level"=10
    I:"Max Loot Level"=5
    S:"Max Power Function"=
    S:"Min Power Function"=
    B:Treasure=false
    B:Discoverable=true
    B:Lootable=true
    B:Tradeable=true
    S:Rarity=UNCOMMON
}


"superiorshields:capacity" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: COMMON
    S:Rarity=COMMON
}


"superiorshields:raging" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"superiorshields:amplify" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"superiorshields:curing" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"superiorshields:quickened" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: COMMON
    S:Rarity=COMMON
}


"superiorshields:fire_nova" {
    # The max level of this enchantment - originally 3.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"superiorshields:frost_nova" {
    # The max level of this enchantment - originally 3.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"superiorshields:shulking_nova" {
    # The max level of this enchantment - originally 3.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"superiorshields:poison_spikes" {
    # The max level of this enchantment - originally 2.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"superiorshields:wither_spikes" {
    # The max level of this enchantment - originally 2.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"enlightened_end:frost_aspect" {
    I:"Max Level"=6
    I:"Max Loot Level"=2
    S:"Max Power Function"=
    S:"Min Power Function"=
    B:Treasure=true
    B:Discoverable=false
    B:Lootable=false
    B:Tradeable=false
    S:Rarity=UNCOMMON
}


"enlightened_end:permafrost_curse" {
    I:"Max Level"=1
    I:"Max Loot Level"=1
    S:"Max Power Function"=
    S:"Min Power Function"=
    B:Treasure=true
    B:Discoverable=false
    B:Lootable=false
    B:Tradeable=false
    S:Rarity=COMMON
}


"majruszsenchantments:dodge" {
    # The max level of this enchantment - originally 2.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Level"=5

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"majruszsenchantments:death_wish" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"majruszsenchantments:enlightenment" {
    # The max level of this enchantment - originally 2.
    # Default: 6; Range: [1 ~ 127]
    I:"Max Level"=6

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"majruszsenchantments:fishing_fanatic" {
    # The max level of this enchantment - originally 8.
    # Default: 11; Range: [1 ~ 127]
    I:"Max Level"=11

    # The max level of this enchantment available from loot sources.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Loot Level"=8

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"majruszsenchantments:fuse_cutter" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"majruszsenchantments:gold_fuelled" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"majruszsenchantments:hunter" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"majruszsenchantments:harvester" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"majruszsenchantments:horse_frost_walker" {
    # The max level of this enchantment - originally 2.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 2; Range: [1 ~ 127]
    I:"Max Loot Level"=2

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"majruszsenchantments:horse_protection" {
    # The max level of this enchantment - originally 4.
    # Default: 11; Range: [1 ~ 127]
    I:"Max Level"=11

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"majruszsenchantments:horse_swiftness" {
    # The max level of this enchantment - originally 4.
    # Default: 11; Range: [1 ~ 127]
    I:"Max Level"=11

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"majruszsenchantments:immortality" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"majruszsenchantments:leech" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"majruszsenchantments:magic_protection" {
    # The max level of this enchantment - originally 4.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"majruszsenchantments:misanthropy" {
    # The max level of this enchantment - originally 5.
    # Default: 10; Range: [1 ~ 127]
    I:"Max Level"=10

    # The max level of this enchantment available from loot sources.
    # Default: 5; Range: [1 ~ 127]
    I:"Max Loot Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"majruszsenchantments:repulsion" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"majruszsenchantments:sixth_sense" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"majruszsenchantments:smelter" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"majruszsenchantments:telekinesis" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"majruszsenchantments:breaking_curse" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"majruszsenchantments:corrosion_curse" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"majruszsenchantments:fatigue_curse" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"majruszsenchantments:incompatibility_curse" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"majruszsenchantments:slippery_curse" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"majruszsenchantments:vampirism_curse" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"locusazzurro_icaruswings:collision_protection" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"locusazzurro_icaruswings:pyrotechnic_affinity" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"locusazzurro_icaruswings:blessing_of_the_sky" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: false
    B:Discoverable=false

    # If enchanted books of this enchantment are available via loot sources.
    # Default: false
    B:Lootable=false

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"malum:rebound" {
    I:"Max Level"=7
    I:"Max Loot Level"=3
    S:"Max Power Function"=
    S:"Min Power Function"=
    B:Treasure=false
    B:Discoverable=true
    B:Lootable=true
    B:Tradeable=true
    S:Rarity=UNCOMMON
}


"malum:haunted" {
    I:"Max Level"=6
    I:"Max Loot Level"=2
    S:"Max Power Function"=
    S:"Min Power Function"=
    B:Treasure=false
    B:Discoverable=true
    B:Lootable=true
    B:Tradeable=true
    S:Rarity=UNCOMMON
}


"malum:spirit_plunder" {
    I:"Max Level"=6
    I:"Max Loot Level"=2
    S:"Max Power Function"=
    S:"Min Power Function"=
    B:Treasure=false
    B:Discoverable=true
    B:Lootable=true
    B:Tradeable=true
    S:Rarity=COMMON
}


"mediaworks:reciprocation" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: false
    B:Discoverable=false

    # If enchanted books of this enchantment are available via loot sources.
    # Default: false
    B:Lootable=false

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"mediaworks:media_shield" {
    # The max level of this enchantment - originally 4.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: false
    B:Discoverable=false

    # If enchanted books of this enchantment are available via loot sources.
    # Default: false
    B:Lootable=false

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: UNCOMMON
    S:Rarity=UNCOMMON
}


"mediaworks:locale_magnification" {
    # The max level of this enchantment - originally 3.
    # Default: 7; Range: [1 ~ 127]
    I:"Max Level"=7

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: false
    B:Discoverable=false

    # If enchanted books of this enchantment are available via loot sources.
    # Default: false
    B:Lootable=false

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"enderzoology:decay" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


"enderzoology:repellent" {
    # The max level of this enchantment - originally 4.
    # Default: 6; Range: [1 ~ 127]
    I:"Max Level"=6

    # The max level of this enchantment available from loot sources.
    # Default: 4; Range: [1 ~ 127]
    I:"Max Loot Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: true
    B:Treasure=true

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: false
    B:Discoverable=false

    # If enchanted books of this enchantment are available via loot sources.
    # Default: false
    B:Lootable=false

    # If enchanted books of this enchantment are available via villager trades.
    # Default: false
    B:Tradeable=false

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"enderzoology:soulbound" {
    # The max level of this enchantment - originally 3.
    # Default: 8; Range: [1 ~ 127]
    I:"Max Level"=8

    # The max level of this enchantment available from loot sources.
    # Default: 3; Range: [1 ~ 127]
    I:"Max Loot Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: VERY_RARE
    S:Rarity=VERY_RARE
}


"enderzoology:withering" {
    # The max level of this enchantment - originally 1.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Level"=1

    # The max level of this enchantment available from loot sources.
    # Default: 1; Range: [1 ~ 127]
    I:"Max Loot Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples
    # Default: 
    S:"Max Power Function"=

    # A function to determine the min enchanting power.
    # Default: 
    S:"Min Power Function"=

    # If this enchantment is only available by loot sources.
    # Default: false
    B:Treasure=false

    # If this enchantment is obtainable via enchanting and enchanted loot items.
    # Default: true
    B:Discoverable=true

    # If enchanted books of this enchantment are available via loot sources.
    # Default: true
    B:Lootable=true

    # If enchanted books of this enchantment are available via villager trades.
    # Default: true
    B:Tradeable=true

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE.
    # Default: RARE
    S:Rarity=RARE
}


